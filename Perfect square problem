class Solution:
    def numSquares(self, n: int) -> int:
        nums,total= [],1
        while((total*total) <= n):
            nums.append(total*total)
            total += 1
        dp = [[0]*(n+1)]*(len(nums)+1)
        for i in range(1,n+1):
            dp[0][i] = sys.maxsize-1
        for i in range(1,len(nums)+1):
            for j in range(1,n+1):
                if(nums[i-1] > j):
                    dp[i][j] = dp[i-1][j]
                else:
                    dp[i][j] = min(dp[i-1][j], 1 + dp[i][j - nums[i-1]])
               
        
        return dp[-1][-1] 
        
   
Solved Similar as Coin Change problem through Unbounded Knapsack Approach
